// Generated by data binding compiler. Do not edit!
package com.example.calendar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.calendar.R;
import com.example.calendar.data.local.db.entity.EventEntity;
import com.example.calendar.utils.extension.DateExtracterKt;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ListItemEventLayoutBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout clDuration;

  @NonNull
  public final TextView tvDuration;

  @NonNull
  public final TextView tvEventTime;

  @NonNull
  public final TextView tvEventTitle;

  @NonNull
  public final View view;

  @Bindable
  protected DateExtracterKt mDateEx;

  @Bindable
  protected EventEntity mEvent;

  protected ListItemEventLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout clDuration, TextView tvDuration, TextView tvEventTime, TextView tvEventTitle,
      View view) {
    super(_bindingComponent, _root, _localFieldCount);
    this.clDuration = clDuration;
    this.tvDuration = tvDuration;
    this.tvEventTime = tvEventTime;
    this.tvEventTitle = tvEventTitle;
    this.view = view;
  }

  public abstract void setDateEx(@Nullable DateExtracterKt dateEx);

  @Nullable
  public DateExtracterKt getDateEx() {
    return mDateEx;
  }

  public abstract void setEvent(@Nullable EventEntity event);

  @Nullable
  public EventEntity getEvent() {
    return mEvent;
  }

  @NonNull
  public static ListItemEventLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_event_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ListItemEventLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ListItemEventLayoutBinding>inflateInternal(inflater, R.layout.list_item_event_layout, root, attachToRoot, component);
  }

  @NonNull
  public static ListItemEventLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_event_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ListItemEventLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ListItemEventLayoutBinding>inflateInternal(inflater, R.layout.list_item_event_layout, null, false, component);
  }

  public static ListItemEventLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ListItemEventLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (ListItemEventLayoutBinding)bind(component, view, R.layout.list_item_event_layout);
  }
}
