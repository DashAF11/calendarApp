// Generated by Dagger (https://dagger.dev).
package com.example.calendar.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import kotlinx.coroutines.CoroutineScope;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesExternalScopeFactory implements Factory<CoroutineScope> {
  @Override
  public CoroutineScope get() {
    return providesExternalScope();
  }

  public static AppModule_ProvidesExternalScopeFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static CoroutineScope providesExternalScope() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesExternalScope());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvidesExternalScopeFactory INSTANCE = new AppModule_ProvidesExternalScopeFactory();
  }
}
