// Generated by Dagger (https://dagger.dev).
package com.example.calendar.di;

import com.example.calendar.data.local.db.EventDatabase;
import com.example.calendar.data.local.db.dao.EventDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideEventDaoFactory implements Factory<EventDao> {
  private final Provider<EventDatabase> dbProvider;

  public DatabaseModule_ProvideEventDaoFactory(Provider<EventDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public EventDao get() {
    return provideEventDao(dbProvider.get());
  }

  public static DatabaseModule_ProvideEventDaoFactory create(Provider<EventDatabase> dbProvider) {
    return new DatabaseModule_ProvideEventDaoFactory(dbProvider);
  }

  public static EventDao provideEventDao(EventDatabase db) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideEventDao(db));
  }
}
